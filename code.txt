/*********************
	NOTES
	$_GET[] SENDS VARIABLES THROUGH URL (?status=thanks)
	$_POST[] SENDS VARIABLES THROUGH HTTP PROTOCAL	
	stripos() function prevents attack
	htmlspecialchars() prevents injection
*********************/


REWRITE RULES

([0-9]+) selects numbers, accessable by $1
RewriteCond creates a condition for GET variables

RewriteCond %{QUERY_STRING} ^id=([0-9]+)$
RewriteRule ^shirt.php$ /shirts/%1/? [R=301]

Creates a condition for get variable ID for shirt page, redirects to the ID number with no text in the url (The /? specifies that)

wrapping php in <pre> allows for things like /n to work

POST
TAKES THE name ATTRIBUTE OF THE HTML ELEMENT IN THE FORM
only executes when POST action is sent to it



<pre><?php
	$flavors = array("Vanilla","Chocolate","Strawberry");
	$countries = array();
	$countries[0] = array(
		"code" => "US",
		"name" => "United States"
	);
	$countries[1] = array(
		"code" => "DE",
		"name" => "Germany"
	);
		// Works like a normal 2d array
var_dump($countries[0]["code"]);
?></pre>

<!-- <html>
	<body>
	<?php foreach ($flavors as $flavor) { ?>
			<div><?php echo $flavor; ?></div>
		<?php } ?>
	 <div><?php echo $country["code"]; ?></div>
</body>
</html> -->

Old shirt.php stuff
if($name == "" OR $email == "" OR $message ==""){
		echo "You must specify a name, email, and message.";
		exit;
	}

	foreach ($_POST as $value) {
		if( stripos($value, 'Content-Type:') !== FALSE){
			echo "There was a problem with the information you entered";
			exit;
		}
	}

	if(trim($_POST["address"]) != ""){
		echo "Error, please try again";
		exit;
	}

if(!$mail->ValidateAddress($email)){
		echo "You must specify a valid email address";
	}
